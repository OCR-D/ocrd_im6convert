#!/bin/bash -eu

which ocrd >/dev/null 2>/dev/null || { echo "ocrd not in \$PATH. Panicking"; exit 1; }

SHAREDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

declare -A out_extensions=(
    ['image/tiff']='.tiff'
    ['image/jp2']='.jp2'
    ['image/png']='.png'
)

main () {

    # Initialize the script
    source `ocrd bashlib filename`

    # Describe calling script to lib.bash
    ocrd__wrap "$SHAREDIR/ocrd-tool.json" "ocrd-im6convert" "$@"

    cd "${argv[working_dir]}"

    # Set output extension
    local out_mimetype="${params['output-format']}"
    local out_extension="${out_extensions[$out_mimetype]}"

    # Download the files and do the conversion
    ocrd workspace -d "$working_dir" find \
        -G "${argv[input_file_grp]}"      \
        -k local_filename                 \
        -k ID                             \
        -k groupId                        \
        -k mimetype                       \
        --download                        \
    | while read csv;do
        # Parse comma separated fields
        local IFS=$'\t'
        local fields=($csv)

        local in_fpath="${fields[0]}"
        local in_id="${fields[1]}"
        local in_groupid="${fields[2]}"
        local in_mimetype="${fields[3]}"

        # Output filename
        local out_fpath="${in_fpath//\.[^\.]*$/}$out_extension"
        local out_id="${in_id}${out_extension}"
        local out_groupid="$in_groupid"

        # Actual conversion
        convert "$in_fpath" "$out_fpath"

        # Add the output files
        ocrd workspace -d "$working_dir" add \
            -G "${argv[out_file_grp]}" \
            -i "$out_id" \
            -g "$out_groupid" \
            -m "$out_mimetype" \
            "$out_fpath"
    done
}


main "$@"
